@import "../../../styles/breakpoints";

.about {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  position: relative;
  min-height: -moz-fit-content;
  min-height: fit-content;
  padding: var(--gap-4);
  padding-block-end: var(--gap-6);

  &::after {
    content: "";
    background-image: url("/src/assets/images/divider.png");
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    width: 22.75rem;
    height: 3.45rem;

    position: absolute;
    right: 0;
    bottom: 0;
  }

  &__textContent {
    display: flex;
    flex-direction: column;
    gap: var(--gap-3);
    flex-grow: 1;
  }

  &__restaurantImages {
    --_base-image-size: 100vw;
    --_margin: 5rem;
    --_image-reposition: 6rem;

    display: flex;
    width: var(--_base-image-size);
    height: var(--_base-image-size);
    aspect-ratio: 1;
    margin-inline: calc(-50vw + 50%); // take the element outside its container.
    margin-block-end: var(--_margin);
    position: relative;

    .topImage,
    .bottomImage {
      border-radius: 1.56rem;
      -webkit-user-select: none;
      user-select: none;
    }

    .topImage {
      width: 100%;
      height: 100%;
      aspect-ratio: 1;
      position: relative;
      left: calc(var(--_image-reposition));
    }
    .bottomImage {
      width: 40%;
      height: 100%;
      position: absolute;
      left: 0;
      bottom: calc(var(--_margin) * -1 + 2rem);
    }
  }
}

@include breakpoint(550px) {
  .about {
  padding-block-end: var(--gap-1);

    &__restaurantImages {
      --_base-image-size: 25rem;
      --_image-reposition: 3rem;
      overflow: unset;
      margin-inline: auto;
      .topImage {
        right: calc(var(--_image-reposition));
      }
      .bottomImage {
        width: 50%;
        left: calc(var(--_image-reposition) * -1);
      }
    }
  }
}

@include lg {
  .about {
    flex-direction: row;
    &__restaurantImages {
      --_base-image-size: clamp(25rem, 12.07vi + 17.52rem, 32rem);
      --_image-reposition: 6rem;
      margin-inline-end: calc(var(--_margin) + var(--_image-reposition));
      margin-inline-start: calc(var(--p-container) * -1);

      .topImage {
        right: calc(var(--_image-reposition));
      }
      .bottomImage {
        left: 0;
      }
    }
  }
}
