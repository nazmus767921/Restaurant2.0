$grid-columns: 12;

.row {
  display: flex;
  flex-wrap: wrap;
}

$layout-values: flex-start, flex-end, center, space-between, space-around,
  space-evenly;

@each $value in $layout-values {
  .justify-#{$value} {
    justify-content: $value;
  }
}

// gap-2, gap-3, gap-4 etc.
$base-gap: 2px;
@for $i from 1 through 8 {
  .gap-#{$i} > * {
    margin: $i * $base-gap;
  }

  .gap-#{$i} {
    margin: -$i * $base-gap;
  }
}

// col-12-xs, col-5-md, col-3-lg etc.
@for $i from 1 through $grid-columns {
  .col-#{$i} {
    flex-basis: calc(100% / $grid-columns * $i);
    max-width: calc(100% / $grid-columns * $i);
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      flex-basis: calc(100% / $grid-columns * $i);
      max-width: calc(100% / $grid-columns * $i);
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      flex-basis: calc(100% / $grid-columns * $i);
      max-width: calc(100% / $grid-columns * $i);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      flex-basis: calc(100% / $grid-columns * $i);
      max-width: calc(100% / $grid-columns * $i);
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      flex-basis: calc(100% / $grid-columns * $i);
      max-width: calc(100% / $grid-columns * $i);
    }
  }
}
@include xxl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xxl {
      flex-basis: calc(100% / $grid-columns * $i);
      max-width: calc(100% / $grid-columns * $i);
    }
  }
}
